name: Turn Pre-release into Release
on:
  release:
    types:
      - published
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  find:
    name: Find release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.final_step.outputs.release_id }}
      tag: ${{ steps.final_step.outputs.tag_name }}
      url: ${{ steps.final_step.outputs.url }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Get releases
        run: curl --no-progress-meter "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases" -o releases.json
      - name: Find release corresponding to the $(cat binary_version) tag
        id: final_step
        run: |
          jq ".[] | select(.tag_name == \"$(cat binary_version)\") | ." <releases.json >release.json
          jq <release.json -r .tag_name
          jq <release.json -r .id
          jq <release.json -r .url
          echo >> $GITHUB_OUTPUT "tag_name=$(jq <release.json -r .tag_name)"
          echo >> $GITHUB_OUTPUT "release_id=$(jq <release.json -r .id)"
          echo >> $GITHUB_OUTPUT "url=$(jq <release.json -r .url)"
  check:
    name: Check if pre-release
    runs-on: ubuntu-latest
    needs: find
    outputs:
      prerelease: ${{ steps.check.outputs.prerelease }}
    steps:
      - name: Get release info
        run: curl ${{ needs.find.outputs.url }} -o release.json
      - id: check
        name: Check if pre-release
        run: |
          jq .prerelease release.json
          echo >> $GITHUB_OUTPUT "prerelease=$(jq .prerelease release.json)"
  convert:
    needs: [find, check]
    if: ${{ needs.check.outputs.prerelease }}
    runs-on: ubuntu-latest
    name: Convert pre-release to release
    steps:
      - name: Convert to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --no-progress-meter \
            -X 'PATCH' \
            -d '{"prerelease":false}' \
            -H 'Accept: application/vnd.github.v3+json' \
            -H "Authorization: token $GITHUB_TOKEN" \
            ${{ needs.find.outputs.url }}

